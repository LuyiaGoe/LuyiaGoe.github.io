---
title: 从输入URL到显示页面的步骤
date: 2020-08-11 12:21:12
layout: post
categories: JavaScript
tags: Object
---


# 精简
1. 根据请求的`URL`交给`DNS`域名解析，找到真实`IP`，向服务器发起请求；
2. 服务器交给后台处理完成后返回数据，浏览器接受文件（`HTML、JS、CSS`、图像等）；
3. 浏览器对返还的资源进行解析，并建立相应的内部数据结构（如`HTML`的`DOM`）；
4. 载入解析到的资源文件，渲染页面

# 详细
1. 输入URL
2. 浏览器检查缓存
 + 若未缓存，发起新请求
 + 若有缓存，且新鲜，则直接使用缓存，跳到转码步骤
 + 若不新鲜，则携带缓存标识对服务器发起请求，根据服务器相应数据再生成页面
3. 浏览器解析URL获取协议、主机、端口、path
4. 组装一个HTTP请求报文
5. 浏览器获取主机IP地址，过程如下：
 + 浏览器缓存
 + 本级缓存
 + hosts文件
 + 路由器缓存
 + ISP DNS缓存
 + DNS递归查询
6. 打开一个socket与目标IP地址，开始TCP三次握手：
 + 客户端发送一个TCP的`SYN=1,Seq=X`的包到服务器端口
 + 服务器返回`SYN=1,ACK=X+1,Seq=Y`的响应包
 + 客户端发送`ACK=Y+1,Seq=Z`
7. TCP连接建立后发送HTTP请求
8. 服务器接受请求并解析，转到服务程序
9. 检查请求头是否携带缓存标识，有则验证是否新鲜，返回304等对应状态码
10. 处理程序读取完整请求并准备HTTP相应，可能需要查询数据库等操作
11. 服务器等响应报文通过TCP连接发送回浏览器
12. 浏览器接受HTTP响应，根据情况选择关闭TCP连接或保留重用，关闭则进行TCP四次挥手：
 + 主动方发送`Fin=1, Ack=Z, Seq=X`
 + 被动房发送`ACK=X+1, Seq=Z`
 + 被动方发送`Fin=1, ACK=X, Seq=Y`
 + 主动方发送`ACK=Y,Seq=X`
13. 浏览器检查响应码：是否为1XX，3XX，4XX，5XX，这些情况处理与2XX不同
14. 查看是否可缓存，可以则缓存
15. 对相应进行解码（如gzip压缩）
16. 根据资源类型决定如何处理（假设资源为HTML文档）
17. 解析HTML文档，构件DOM树
18. 